# Copyright 2025 SUSE LLC
# SPDX-License-Identifier: Apache-2.0

## @section Common parameters

## @param kubernetesClusterDomain The Kubernetes cluster domain used for internal service DNS names.
kubernetesClusterDomain: cluster.local

## @section MCPO component
mcpo:
  ## @param mcpo.enabled Enable the MCPO component.
  enabled: false
  ## @param mcpo.args Command-line arguments for the MCPO container.
  args:
    - --port=8000
    - --config
    - /app/config/config.json
  image:
    ## @param mcpo.image.repository The container image repository for the MCPO component.
    repository: ghcr.io/open-webui/mcpo
    ## @param mcpo.image.tag The container image tag for the MCPO component.
    tag: main
  resources:
    limits:
      ## @param mcpo.resources.limits.cpu The CPU limit for the MCPO pod.
      cpu: "1"
      ## @param mcpo.resources.limits.memory The memory limit for the MCPO pod.
      memory: 1Gi
    requests:
      ## @param mcpo.resources.requests.cpu The CPU request for the MCPO pod.
      cpu: 200m
      ## @param mcpo.resources.requests.memory The memory request for the MCPO pod.
      memory: 256Mi
  ## @param mcpo.ports [array] Port configuration for the MCPO service.
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8000
  ## @param mcpo.replicas The number of pod replicas for the MCPO deployment.
  replicas: 1
  ## @param mcpo.type The type of Kubernetes service for MCPO (e.g., ClusterIP, NodePort).
  type: ClusterIP

## @section MCP Server for Trento component
mcpServerTrento:
  ingress:
    ## @param mcpServerTrento.ingress.enabled Enable ingress for the mcpServerTrento service.
    enabled: true
    ## @param mcpServerTrento.ingress.ingressClassName The class of the ingress controller to use.
    ingressClassName: traefik
    ## @param mcpServerTrento.ingress.tls Enable TLS for the ingress.
    tls: true
    ## @param mcpServerTrento.ingress.hosts [array] Ingress hosts configuration for the mcpServerTrento service.
    hosts:
      ## The host for the ingress rule.
      - host: example.com
        paths:
          ## The path for the ingress rule.
          - path: /mcp-server-trento
            ## The path type for the ingress rule (e.g., Prefix, Exact).
            pathType: Prefix
  ## @param mcpServerTrento.args Command-line arguments for the MCP Server Trento container. Includes settings for port, transport, paths, and Trento connection details.
  args:
    - --port=8080
    - --transport=sse
    - --oasPath=/app/api/openapi.json
    - --oauth-enabled=false
    - --trento-url=https://demo.trento-project.io
    - --trento-username=demo
    - --trento-password=demopass
  image:
    ## @param mcpServerTrento.image.repository The container image repository for the MCP Server Trento component.
    repository: antgamdia/mcp-server-trento
    ## @param mcpServerTrento.image.tag The container image tag for the MCP Server Trento component.
    tag: latest
  resources:
    limits:
      ## @param mcpServerTrento.resources.limits.cpu The CPU limit for the MCP Server Trento pod.
      cpu: 500m
      ## @param mcpServerTrento.resources.limits.memory The memory limit for the MCP Server Trento pod.
      memory: 512Mi
    requests:
      ## @param mcpServerTrento.resources.requests.cpu The CPU request for the MCP Server Trento pod.
      cpu: 100m
      ## @param mcpServerTrento.resources.requests.memory The memory request for the MCP Server Trento pod.
      memory: 128Mi
  ## @param mcpServerTrento.ports [array] Port configuration for the mcpServerTrento service.
  ports:
    - ## The name of the service port.
      name: http
      ## The port number for the service.
      port: 80
      ## The protocol for the service port.
      protocol: TCP
      ## The target port on the pod.
      targetPort: 8080
  ## @param mcpServerTrento.replicas The number of pod replicas for the MCP Server Trento deployment.
  replicas: 1
  ## @param mcpServerTrento.type The type of Kubernetes service for MCP Server Trento (e.g., ClusterIP, NodePort).
  type: ClusterIP
