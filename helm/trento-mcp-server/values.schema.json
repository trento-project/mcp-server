{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "kubernetesClusterDomain": {
            "type": "string",
            "description": "The Kubernetes cluster domain used for internal service DNS names.",
            "default": "cluster.local"
        },
        "mcpo": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the MCPO component.",
                    "default": false
                },
                "args": {
                    "type": "array",
                    "description": "Command-line arguments for the MCPO container.",
                    "default": [
                        "--port=8000",
                        "--config",
                        "/app/config/config.json"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "The container image repository for the MCPO component.",
                            "default": "ghcr.io/open-webui/mcpo"
                        },
                        "tag": {
                            "type": "string",
                            "description": "The container image tag for the MCPO component.",
                            "default": "main"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "The CPU limit for the MCPO pod.",
                                    "default": "1"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "The memory limit for the MCPO pod.",
                                    "default": "1Gi"
                                }
                            }
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "The CPU request for the MCPO pod.",
                                    "default": "200m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "The memory request for the MCPO pod.",
                                    "default": "256Mi"
                                }
                            }
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "description": "Port configuration for the MCPO service.",
                    "default": [],
                    "items": {
                        "type": "object"
                    }
                },
                "replicas": {
                    "type": "number",
                    "description": "The number of pod replicas for the MCPO deployment.",
                    "default": 1
                },
                "type": {
                    "type": "string",
                    "description": "The type of Kubernetes service for MCPO (e.g., ClusterIP, NodePort).",
                    "default": "ClusterIP"
                }
            }
        },
        "mcpServer": {
            "type": "object",
            "properties": {
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress for the mcpServer service.",
                            "default": true
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "The class of the ingress controller to use.",
                            "default": "traefik"
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS for the ingress.",
                            "default": true
                        },
                        "hosts": {
                            "type": "array",
                            "description": "Ingress hosts configuration for the mcpServer service.",
                            "default": [],
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Command-line arguments for the MCP Server container. Includes settings for port, transport, paths, and Trento connection details.",
                    "default": [
                        "--port=8080",
                        "--transport=sse",
                        "--oas-path=/app/api/openapi.json",
                        "--trento-url=https://demo.trento-project.io",
                        "--header-name=X-TRENTO-MCP-APIKEY",
                        "--tag-filter=MCP",
                        "--verbosity=info"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "repository": {
                            "type": "string",
                            "description": "The container image repository for the MCP Server component.",
                            "default": "ghcr.io/trento-project/trento-mcp-server"
                        },
                        "tag": {
                            "type": "string",
                            "description": "The container image tag for the MCP Server component.",
                            "default": "latest"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "The CPU limit for the MCP Server pod.",
                                    "default": "500m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "The memory limit for the MCP Server pod.",
                                    "default": "512Mi"
                                }
                            }
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "The CPU request for the MCP Server pod.",
                                    "default": "100m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "The memory request for the MCP Server pod.",
                                    "default": "128Mi"
                                }
                            }
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "description": "Port configuration for the mcpServer service.",
                    "default": [],
                    "items": {
                        "type": "object"
                    }
                },
                "replicas": {
                    "type": "number",
                    "description": "The number of pod replicas for the MCP Server deployment.",
                    "default": 1
                },
                "type": {
                    "type": "string",
                    "description": "The type of Kubernetes service for MCP Server (e.g., ClusterIP, NodePort).",
                    "default": "ClusterIP"
                },
                "port": {
                    "type": "number",
                    "description": "The port number for the MCP Server.",
                    "default": 8080
                },
                "transport": {
                    "type": "string",
                    "description": "The transport protocol for the MCP Server (e.g., sse, streamable).",
                    "default": "streamable"
                },
                "oasPath": {
                    "type": "string",
                    "description": "The path to the OpenAPI specification file.",
                    "default": "/app/api/openapi.json"
                },
                "trentoURL": {
                    "type": "string",
                    "description": "The URL of the Trento instance.",
                    "default": "https://demo.trento-project.io"
                },
                "headerName": {
                    "type": "string",
                    "description": "The name of the header used for API key authentication.",
                    "default": "X-TRENTO-MCP-APIKEY"
                },
                "tagFilter": {
                    "type": "array",
                    "description": "List of tags to filter MCP operations.",
                    "default": [
                        "MCP"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "verbosity": {
                    "type": "string",
                    "description": "The verbosity level for logging (e.g., info, debug).",
                    "default": "info"
                },
                "insecureTLS": {
                    "type": "boolean",
                    "description": "Allow insecure TLS connections.",
                    "default": false
                },
                "env": {
                    "type": "object",
                    "description": "Additional environment variables to set in the MCP Server container.",
                    "default": {}
                },
                "config": {
                    "type": "object",
                    "description": "Configuration file options for the MCP Server.",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable mounting a configuration file for the MCP Server.",
                            "default": false
                        },
                        "fileName": {
                            "type": "string",
                            "description": "Name of the configuration file inside the config map.",
                            "default": "trento-mcp-server.config.yaml"
                        },
                        "mountPath": {
                            "type": "string",
                            "description": "Path where the configuration file will be mounted.",
                            "default": "/app/config"
                        },
                        "content": {
                            "type": "string",
                            "description": "YAML content of the configuration file.",
                            "default": "# Example configuration file disabled by default"
                        }
                    }
                }
            }
        }
    }
}
